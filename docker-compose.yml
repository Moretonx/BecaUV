version: "3.9"

services:
  sql-server:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sql-server
    # restart: always
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "M4sK@2025!"
      ACCEPT_EULA: "Y"
      MSSQL_DATA_DIR: /var/opt/mssql/data
      MSSQL_LOG_DIR: /var/opt/mssql/log
      MSSQL_BACKUP_DIR: /var/opt/mssql/backup
    networks:
      - red_privada
    volumes:
      - sql-server-data:/var/opt/mssql
      - ./backup:/var/opt/mssql/backup
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./entrypoint.sh:/entrypoint.sh:ro
    entrypoint: ["/bin/bash", "/entrypoint.sh"]
    user: "0:0"  # Run as root to ensure proper permissions


  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    command: ["forego", "start", "-r"]
    environment:
      - SERVER_TOKENS=off
      - PROXY_CONNECT_TIMEOUT=300
      - PROXY_SEND_TIMEOUT=300
      - PROXY_READ_TIMEOUT=90m
      - SEND_TIMEOUT=300
      - CLIENT_MAX_BODY_SIZE=1024M


  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.backend
    restart: always
    ports:
      - "0.0.0.0:4000:4000/tcp"  # Mapeo para IPv4
    depends_on:
      - sql-server
    networks:
      - red_proxy
      - red_privada
      
      
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    restart: always
    ports:
      - "0.0.0.0:4200:4200"  # Mapeo para IPv4
    networks:
      - red_proxy
      - red_privada


networks:
  red_proxy:
    external: false
    name: nginx-proxy
  red_privada:
    driver_opts:
      com.docker.network.enable_ipv6: "true"

volumes:
  sql-server-data:
